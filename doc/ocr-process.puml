@startuml
skinparam responseMessageBelowArrow true

participant SAT
participant Textract
participant "request-ocr-analysis-and-save-result"
participant "ocr-body-filter"
participant "ocr-sent-tokenize"
database ElasticSearch

SAT -> "request-ocr-analysis-and-save-result": Invoke
activate "request-ocr-analysis-and-save-result"

"request-ocr-analysis-and-save-result" -> Textract: Request OCR analysis
activate Textract
"request-ocr-analysis-and-save-result" <-- Textract: Return result
deactivate Textract

"request-ocr-analysis-and-save-result" -> ElasticSearch: Save to <ocr-result>
"request-ocr-analysis-and-save-result" -> "ocr-body-filter": Invoke via SNS
deactivate "request-ocr-analysis-and-save-result"
activate "ocr-body-filter"

"ocr-body-filter" -> ElasticSearch: Query <ocr-result>
"ocr-body-filter" <-- ElasticSearch: Return document

"ocr-body-filter" -> "ocr-body-filter": Filter text into text elements
"ocr-body-filter" -> "ocr-sent-tokenize": Invoke via SNS
deactivate "ocr-body-filter"

activate "ocr-sent-tokenize"
"ocr-sent-tokenize" -> "ocr-sent-tokenize": Sentence tokenizing
"ocr-sent-tokenize" -> ElasticSearch: Save to <ocr-sentence>
deactivate "ocr-sent-tokenize"
@enduml